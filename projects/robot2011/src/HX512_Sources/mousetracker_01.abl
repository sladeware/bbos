MODULE MouseTracker_01

TITLE 'Mouse Tracking Demo'
// This fun demo shows how to use the CPLD on the HX512 for things other than a memory controller
// In this case, the HYDRA application is going to track the mouse buttons, right and left motion
// The 6 program LEDs will track the right/left motion of the mouse, while the 3 operation leds
// will track the buttons

// HYDRA Expansion interface Signals
// IO_0 - Right		 			(pin 23 on Propeller).
// IO_1 - Left 					(pin 22 on Propeller).
// IO_2 - Up    (unused by CPLD in this demo) 	(pin 21 on Propeller).
// IO_3 - Down  (unused by CPLD in this demo) 	(pin 20 on Propeller).
// IO_4 - Mouse Left Button 		 	(pin 19 on Propeller).
// IO_5 - Mouse Middle Button		 	(pin 18 on Propeller).
// IO_6 - Mouse Right Button		 	(pin 17 on Propeller).
// IO_7 - Unused 				(pin 16 on Propeller).
// RESn - Reset Line				(pin xx on Propeller).
// USB_RXD - Clock			 	(pin 30 on Propeller).

DECLARATIONS

    // inputs 
    clock       pin 38;             // general system clock coming from USB_RXD on HYDRA
    !reset      pin 8;              // hydra RESn reset line (active low), notice inversion to make active high
    io7..io0    pin 15..17,19..23;  // data bus lines from HYDRA, IO_7..IO_0   

    // outputs
    led5..led0 pin 85, 87, 14, 35, 36, 37 istype 'reg'; // the mouse tracking lights, use the program LEDs

    // create a set for the mouse direction leds
    move_leds = [led5..led0];	

    // define leds for mouse buttons	
    led_read  pin 78;
    led_write pin 79;
    led_latch pin 80;
    
EQUATIONS
	
    // set clock
    move_leds.clk = clock;

    // simple combinational logic for buttons left, middle, right, top to botton on the read, write, latch leds
    led_read  = io4;
    led_write = io5;
    led_latch = io6;

    // test for reset, if so center the little tracking led
    when (move_leds == [0,0,0,0,0,0]) then { move_leds = [0,0,1,0,0,0]; } 	

    // test for mouse move right? If so shift right
    else when (io0 == 1) then { move_leds = [led0, led5, led4, led3, led2, led1]; }

    // test for mouse move left? If so shift left
    else when (io1 == 1) then { move_leds = [led4, led3, led2, led1, led0, led5]; }

    else { move_leds = move_leds; }

END

